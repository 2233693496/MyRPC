// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: echo.proto

#include "echo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace MySvr {
namespace Echo {
class EchoMySelfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EchoMySelfRequest>
      _instance;
} _EchoMySelfRequest_default_instance_;
class EchoMySelfResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EchoMySelfResponse>
      _instance;
} _EchoMySelfResponse_default_instance_;
class OneWayMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OneWayMessage>
      _instance;
} _OneWayMessage_default_instance_;
class FastRespRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FastRespRequest>
      _instance;
} _FastRespRequest_default_instance_;
}  // namespace Echo
}  // namespace MySvr
namespace protobuf_echo_2eproto {
static void InitDefaultsEchoMySelfRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Echo::_EchoMySelfRequest_default_instance_;
    new (ptr) ::MySvr::Echo::EchoMySelfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Echo::EchoMySelfRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EchoMySelfRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEchoMySelfRequest}, {}};

static void InitDefaultsEchoMySelfResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Echo::_EchoMySelfResponse_default_instance_;
    new (ptr) ::MySvr::Echo::EchoMySelfResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Echo::EchoMySelfResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EchoMySelfResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEchoMySelfResponse}, {}};

static void InitDefaultsOneWayMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Echo::_OneWayMessage_default_instance_;
    new (ptr) ::MySvr::Echo::OneWayMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Echo::OneWayMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OneWayMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOneWayMessage}, {}};

static void InitDefaultsFastRespRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Echo::_FastRespRequest_default_instance_;
    new (ptr) ::MySvr::Echo::FastRespRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Echo::FastRespRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FastRespRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFastRespRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EchoMySelfRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EchoMySelfResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OneWayMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FastRespRequest.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::EchoMySelfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::EchoMySelfRequest, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::EchoMySelfResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::EchoMySelfResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::OneWayMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::OneWayMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::FastRespRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Echo::FastRespRequest, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MySvr::Echo::EchoMySelfRequest)},
  { 6, -1, sizeof(::MySvr::Echo::EchoMySelfResponse)},
  { 12, -1, sizeof(::MySvr::Echo::OneWayMessage)},
  { 18, -1, sizeof(::MySvr::Echo::FastRespRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Echo::_EchoMySelfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Echo::_EchoMySelfResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Echo::_OneWayMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Echo::_FastRespRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "echo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\necho.proto\022\nMySvr.Echo\032\nbase.proto\"$\n\021"
      "EchoMySelfRequest\022\017\n\007message\030\001 \001(\t\"%\n\022Ec"
      "hoMySelfResponse\022\017\n\007message\030\001 \001(\t\" \n\rOne"
      "WayMessage\022\017\n\007message\030\001 \001(\t\"\"\n\017FastRespR"
      "equest\022\017\n\007message\030\001 \001(\t2\356\001\n\004Echo\022K\n\nEcho"
      "MySelf\022\035.MySvr.Echo.EchoMySelfRequest\032\036."
      "MySvr.Echo.EchoMySelfResponse\022E\n\006OneWay\022"
      "\031.MySvr.Echo.OneWayMessage\032\032.MySvr.Base."
      "OneWayResponse\"\004\210\265\030\002\022K\n\010FastResp\022\033.MySvr"
      ".Echo.FastRespRequest\032\034.MySvr.Base.FastR"
      "espResponse\"\004\210\265\030\003\032\005\210\265\030\235\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 432);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "echo.proto", &protobuf_RegisterTypes);
  ::protobuf_base_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_echo_2eproto
namespace MySvr {
namespace Echo {

// ===================================================================

void EchoMySelfRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoMySelfRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoMySelfRequest::EchoMySelfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_echo_2eproto::scc_info_EchoMySelfRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Echo.EchoMySelfRequest)
}
EchoMySelfRequest::EchoMySelfRequest(const EchoMySelfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.Echo.EchoMySelfRequest)
}

void EchoMySelfRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EchoMySelfRequest::~EchoMySelfRequest() {
  // @@protoc_insertion_point(destructor:MySvr.Echo.EchoMySelfRequest)
  SharedDtor();
}

void EchoMySelfRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoMySelfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EchoMySelfRequest::descriptor() {
  ::protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoMySelfRequest& EchoMySelfRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_echo_2eproto::scc_info_EchoMySelfRequest.base);
  return *internal_default_instance();
}


void EchoMySelfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Echo.EchoMySelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EchoMySelfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Echo.EchoMySelfRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Echo.EchoMySelfRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Echo.EchoMySelfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Echo.EchoMySelfRequest)
  return false;
#undef DO_
}

void EchoMySelfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Echo.EchoMySelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.EchoMySelfRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Echo.EchoMySelfRequest)
}

::google::protobuf::uint8* EchoMySelfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Echo.EchoMySelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.EchoMySelfRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Echo.EchoMySelfRequest)
  return target;
}

size_t EchoMySelfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Echo.EchoMySelfRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EchoMySelfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Echo.EchoMySelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoMySelfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoMySelfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Echo.EchoMySelfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Echo.EchoMySelfRequest)
    MergeFrom(*source);
  }
}

void EchoMySelfRequest::MergeFrom(const EchoMySelfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Echo.EchoMySelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void EchoMySelfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Echo.EchoMySelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoMySelfRequest::CopyFrom(const EchoMySelfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Echo.EchoMySelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoMySelfRequest::IsInitialized() const {
  return true;
}

void EchoMySelfRequest::Swap(EchoMySelfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoMySelfRequest::InternalSwap(EchoMySelfRequest* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EchoMySelfRequest::GetMetadata() const {
  protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EchoMySelfResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoMySelfResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoMySelfResponse::EchoMySelfResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_echo_2eproto::scc_info_EchoMySelfResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Echo.EchoMySelfResponse)
}
EchoMySelfResponse::EchoMySelfResponse(const EchoMySelfResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.Echo.EchoMySelfResponse)
}

void EchoMySelfResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EchoMySelfResponse::~EchoMySelfResponse() {
  // @@protoc_insertion_point(destructor:MySvr.Echo.EchoMySelfResponse)
  SharedDtor();
}

void EchoMySelfResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoMySelfResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EchoMySelfResponse::descriptor() {
  ::protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoMySelfResponse& EchoMySelfResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_echo_2eproto::scc_info_EchoMySelfResponse.base);
  return *internal_default_instance();
}


void EchoMySelfResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Echo.EchoMySelfResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EchoMySelfResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Echo.EchoMySelfResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Echo.EchoMySelfResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Echo.EchoMySelfResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Echo.EchoMySelfResponse)
  return false;
#undef DO_
}

void EchoMySelfResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Echo.EchoMySelfResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.EchoMySelfResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Echo.EchoMySelfResponse)
}

::google::protobuf::uint8* EchoMySelfResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Echo.EchoMySelfResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.EchoMySelfResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Echo.EchoMySelfResponse)
  return target;
}

size_t EchoMySelfResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Echo.EchoMySelfResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EchoMySelfResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Echo.EchoMySelfResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoMySelfResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoMySelfResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Echo.EchoMySelfResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Echo.EchoMySelfResponse)
    MergeFrom(*source);
  }
}

void EchoMySelfResponse::MergeFrom(const EchoMySelfResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Echo.EchoMySelfResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void EchoMySelfResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Echo.EchoMySelfResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoMySelfResponse::CopyFrom(const EchoMySelfResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Echo.EchoMySelfResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoMySelfResponse::IsInitialized() const {
  return true;
}

void EchoMySelfResponse::Swap(EchoMySelfResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoMySelfResponse::InternalSwap(EchoMySelfResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EchoMySelfResponse::GetMetadata() const {
  protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OneWayMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneWayMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneWayMessage::OneWayMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_echo_2eproto::scc_info_OneWayMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Echo.OneWayMessage)
}
OneWayMessage::OneWayMessage(const OneWayMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.Echo.OneWayMessage)
}

void OneWayMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OneWayMessage::~OneWayMessage() {
  // @@protoc_insertion_point(destructor:MySvr.Echo.OneWayMessage)
  SharedDtor();
}

void OneWayMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OneWayMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OneWayMessage::descriptor() {
  ::protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneWayMessage& OneWayMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_echo_2eproto::scc_info_OneWayMessage.base);
  return *internal_default_instance();
}


void OneWayMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Echo.OneWayMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OneWayMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Echo.OneWayMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Echo.OneWayMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Echo.OneWayMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Echo.OneWayMessage)
  return false;
#undef DO_
}

void OneWayMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Echo.OneWayMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.OneWayMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Echo.OneWayMessage)
}

::google::protobuf::uint8* OneWayMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Echo.OneWayMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.OneWayMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Echo.OneWayMessage)
  return target;
}

size_t OneWayMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Echo.OneWayMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneWayMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Echo.OneWayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OneWayMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneWayMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Echo.OneWayMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Echo.OneWayMessage)
    MergeFrom(*source);
  }
}

void OneWayMessage::MergeFrom(const OneWayMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Echo.OneWayMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void OneWayMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Echo.OneWayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneWayMessage::CopyFrom(const OneWayMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Echo.OneWayMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneWayMessage::IsInitialized() const {
  return true;
}

void OneWayMessage::Swap(OneWayMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneWayMessage::InternalSwap(OneWayMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OneWayMessage::GetMetadata() const {
  protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FastRespRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FastRespRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FastRespRequest::FastRespRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_echo_2eproto::scc_info_FastRespRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Echo.FastRespRequest)
}
FastRespRequest::FastRespRequest(const FastRespRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.Echo.FastRespRequest)
}

void FastRespRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FastRespRequest::~FastRespRequest() {
  // @@protoc_insertion_point(destructor:MySvr.Echo.FastRespRequest)
  SharedDtor();
}

void FastRespRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FastRespRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FastRespRequest::descriptor() {
  ::protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FastRespRequest& FastRespRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_echo_2eproto::scc_info_FastRespRequest.base);
  return *internal_default_instance();
}


void FastRespRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Echo.FastRespRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FastRespRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Echo.FastRespRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Echo.FastRespRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Echo.FastRespRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Echo.FastRespRequest)
  return false;
#undef DO_
}

void FastRespRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Echo.FastRespRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.FastRespRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Echo.FastRespRequest)
}

::google::protobuf::uint8* FastRespRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Echo.FastRespRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Echo.FastRespRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Echo.FastRespRequest)
  return target;
}

size_t FastRespRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Echo.FastRespRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FastRespRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Echo.FastRespRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FastRespRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FastRespRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Echo.FastRespRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Echo.FastRespRequest)
    MergeFrom(*source);
  }
}

void FastRespRequest::MergeFrom(const FastRespRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Echo.FastRespRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void FastRespRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Echo.FastRespRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FastRespRequest::CopyFrom(const FastRespRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Echo.FastRespRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastRespRequest::IsInitialized() const {
  return true;
}

void FastRespRequest::Swap(FastRespRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FastRespRequest::InternalSwap(FastRespRequest* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FastRespRequest::GetMetadata() const {
  protobuf_echo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_echo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Echo
}  // namespace MySvr
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Echo::EchoMySelfRequest* Arena::CreateMaybeMessage< ::MySvr::Echo::EchoMySelfRequest >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Echo::EchoMySelfRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Echo::EchoMySelfResponse* Arena::CreateMaybeMessage< ::MySvr::Echo::EchoMySelfResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Echo::EchoMySelfResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Echo::OneWayMessage* Arena::CreateMaybeMessage< ::MySvr::Echo::OneWayMessage >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Echo::OneWayMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Echo::FastRespRequest* Arena::CreateMaybeMessage< ::MySvr::Echo::FastRespRequest >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Echo::FastRespRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
