// Generated by the MyRPC compiler v1.0.0 . DO NOT EDIT! unless you know what you are doing

#pragma once

#include <set>
#include <string>

#include "../../common/log.hpp"
#include "../../common/utils.hpp"
#include "../../core/handler.hpp"
#include "../../core/mysvrclient.hpp"
#include "../../protocol/base.pb.h"
#include "proto/user.pb.h"

using namespace MySvr::Base;
using namespace MySvr::User;

class UserHandler : public Core::MyHandler {
 public:
  UserHandler() {
    service_name_ = std::string{"User"};
    rpc_names_ = std::unordered_set<std::string>{"Create", "Update", "Read", "Delete", "TicketRenewal"};
  }
  void MySvrHandler(Protocol::MySvrMessage &req, Protocol::MySvrMessage &resp) {
    RPC_HANDLER("Create", Create, CreateRequest, CreateResponse, req, resp);
    RPC_HANDLER("Update", Update, UpdateRequest, UpdateResponse, req, resp);
    RPC_HANDLER("Read", Read, ReadRequest, ReadResponse, req, resp);
    RPC_HANDLER("Delete", Delete, DeleteRequest, DeleteResponse, req, resp);
  }
  int Create(CreateRequest &request, CreateResponse &response);
  int Update(UpdateRequest &request, UpdateResponse &response);
  int Read(ReadRequest &request, ReadResponse &response);
  int Delete(DeleteRequest &request, DeleteResponse &response);
};
