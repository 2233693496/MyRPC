// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base.proto

#include "base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_base_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceStack;
}  // namespace protobuf_base_2eproto
namespace MySvr {
namespace Base {
class TraceStackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceStack>
      _instance;
} _TraceStack_default_instance_;
class ContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Context>
      _instance;
} _Context_default_instance_;
class OneWayResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OneWayResponse>
      _instance;
} _OneWayResponse_default_instance_;
class FastRespResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FastRespResponse>
      _instance;
} _FastRespResponse_default_instance_;
}  // namespace Base
}  // namespace MySvr
namespace protobuf_base_2eproto {
static void InitDefaultsTraceStack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Base::_TraceStack_default_instance_;
    new (ptr) ::MySvr::Base::TraceStack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Base::TraceStack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceStack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceStack}, {}};

static void InitDefaultsContext() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Base::_Context_default_instance_;
    new (ptr) ::MySvr::Base::Context();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Base::Context::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Context =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsContext}, {
      &protobuf_base_2eproto::scc_info_TraceStack.base,}};

static void InitDefaultsOneWayResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Base::_OneWayResponse_default_instance_;
    new (ptr) ::MySvr::Base::OneWayResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Base::OneWayResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OneWayResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOneWayResponse}, {}};

static void InitDefaultsFastRespResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::Base::_FastRespResponse_default_instance_;
    new (ptr) ::MySvr::Base::FastRespResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::Base::FastRespResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FastRespResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFastRespResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TraceStack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Context.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OneWayResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FastRespResponse.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, current_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, rpc_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, spend_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::TraceStack, is_batch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, log_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, rpc_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, current_stack_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, parent_stack_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, stack_alloc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::Context, trace_stack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::OneWayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::Base::FastRespResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MySvr::Base::TraceStack)},
  { 13, -1, sizeof(::MySvr::Base::Context)},
  { 26, -1, sizeof(::MySvr::Base::OneWayResponse)},
  { 31, -1, sizeof(::MySvr::Base::FastRespResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Base::_TraceStack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Base::_Context_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Base::_OneWayResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::Base::_FastRespResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "base.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nbase.proto\022\nMySvr.Base\032 google/protobu"
      "f/descriptor.proto\"\245\001\n\nTraceStack\022\021\n\tpar"
      "ent_id\030\001 \001(\005\022\022\n\ncurrent_id\030\002 \001(\005\022\024\n\014serv"
      "ice_name\030\003 \001(\t\022\020\n\010rpc_name\030\004 \001(\t\022\023\n\013stat"
      "us_code\030\005 \001(\005\022\017\n\007message\030\006 \001(\t\022\020\n\010spend_"
      "us\030\007 \001(\003\022\020\n\010is_batch\030\010 \001(\010\"\316\001\n\007Context\022\016"
      "\n\006log_id\030\001 \001(\t\022\024\n\014service_name\030\002 \001(\t\022\020\n\010"
      "rpc_name\030\003 \001(\t\022\023\n\013status_code\030\004 \001(\005\022\030\n\020c"
      "urrent_stack_id\030\005 \001(\005\022\027\n\017parent_stack_id"
      "\030\006 \001(\005\022\026\n\016stack_alloc_id\030\007 \001(\005\022+\n\013trace_"
      "stack\030\010 \003(\0132\026.MySvr.Base.TraceStack\"\020\n\016O"
      "neWayResponse\"\022\n\020FastRespResponse:/\n\004Por"
      "t\022\037.google.protobuf.ServiceOptions\030\321\206\003 \001"
      "(\005:4\n\nMethodMode\022\036.google.protobuf.Metho"
      "dOptions\030\322\206\003 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 584);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_base_2eproto
namespace MySvr {
namespace Base {

// ===================================================================

void TraceStack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceStack::kParentIdFieldNumber;
const int TraceStack::kCurrentIdFieldNumber;
const int TraceStack::kServiceNameFieldNumber;
const int TraceStack::kRpcNameFieldNumber;
const int TraceStack::kStatusCodeFieldNumber;
const int TraceStack::kMessageFieldNumber;
const int TraceStack::kSpendUsFieldNumber;
const int TraceStack::kIsBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceStack::TraceStack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_TraceStack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Base.TraceStack)
}
TraceStack::TraceStack(const TraceStack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  rpc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rpc_name().size() > 0) {
    rpc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_name_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&parent_id_, &from.parent_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&spend_us_) -
    reinterpret_cast<char*>(&parent_id_)) + sizeof(spend_us_));
  // @@protoc_insertion_point(copy_constructor:MySvr.Base.TraceStack)
}

void TraceStack::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parent_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spend_us_) -
      reinterpret_cast<char*>(&parent_id_)) + sizeof(spend_us_));
}

TraceStack::~TraceStack() {
  // @@protoc_insertion_point(destructor:MySvr.Base.TraceStack)
  SharedDtor();
}

void TraceStack::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TraceStack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TraceStack::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TraceStack& TraceStack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_TraceStack.base);
  return *internal_default_instance();
}


void TraceStack::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Base.TraceStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parent_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spend_us_) -
      reinterpret_cast<char*>(&parent_id_)) + sizeof(spend_us_));
  _internal_metadata_.Clear();
}

bool TraceStack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Base.TraceStack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 parent_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Base.TraceStack.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rpc_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rpc_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rpc_name().data(), static_cast<int>(this->rpc_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Base.TraceStack.rpc_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Base.TraceStack.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 spend_us = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &spend_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_batch = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Base.TraceStack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Base.TraceStack)
  return false;
#undef DO_
}

void TraceStack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Base.TraceStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent_id = 1;
  if (this->parent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->parent_id(), output);
  }

  // int32 current_id = 2;
  if (this->current_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->current_id(), output);
  }

  // string service_name = 3;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.TraceStack.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_name(), output);
  }

  // string rpc_name = 4;
  if (this->rpc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc_name().data(), static_cast<int>(this->rpc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.TraceStack.rpc_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rpc_name(), output);
  }

  // int32 status_code = 5;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->status_code(), output);
  }

  // string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.TraceStack.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->message(), output);
  }

  // int64 spend_us = 7;
  if (this->spend_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->spend_us(), output);
  }

  // bool is_batch = 8;
  if (this->is_batch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_batch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Base.TraceStack)
}

::google::protobuf::uint8* TraceStack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Base.TraceStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent_id = 1;
  if (this->parent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->parent_id(), target);
  }

  // int32 current_id = 2;
  if (this->current_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->current_id(), target);
  }

  // string service_name = 3;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.TraceStack.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_name(), target);
  }

  // string rpc_name = 4;
  if (this->rpc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc_name().data(), static_cast<int>(this->rpc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.TraceStack.rpc_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rpc_name(), target);
  }

  // int32 status_code = 5;
  if (this->status_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->status_code(), target);
  }

  // string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.TraceStack.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->message(), target);
  }

  // int64 spend_us = 7;
  if (this->spend_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->spend_us(), target);
  }

  // bool is_batch = 8;
  if (this->is_batch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_batch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Base.TraceStack)
  return target;
}

size_t TraceStack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Base.TraceStack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 3;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string rpc_name = 4;
  if (this->rpc_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rpc_name());
  }

  // string message = 6;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 parent_id = 1;
  if (this->parent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_id());
  }

  // int32 current_id = 2;
  if (this->current_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_id());
  }

  // int32 status_code = 5;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status_code());
  }

  // bool is_batch = 8;
  if (this->is_batch() != 0) {
    total_size += 1 + 1;
  }

  // int64 spend_us = 7;
  if (this->spend_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->spend_us());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceStack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Base.TraceStack)
  GOOGLE_DCHECK_NE(&from, this);
  const TraceStack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TraceStack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Base.TraceStack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Base.TraceStack)
    MergeFrom(*source);
  }
}

void TraceStack::MergeFrom(const TraceStack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Base.TraceStack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.rpc_name().size() > 0) {

    rpc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_name_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.parent_id() != 0) {
    set_parent_id(from.parent_id());
  }
  if (from.current_id() != 0) {
    set_current_id(from.current_id());
  }
  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
  if (from.is_batch() != 0) {
    set_is_batch(from.is_batch());
  }
  if (from.spend_us() != 0) {
    set_spend_us(from.spend_us());
  }
}

void TraceStack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Base.TraceStack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraceStack::CopyFrom(const TraceStack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Base.TraceStack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceStack::IsInitialized() const {
  return true;
}

void TraceStack::Swap(TraceStack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceStack::InternalSwap(TraceStack* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rpc_name_.Swap(&other->rpc_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parent_id_, other->parent_id_);
  swap(current_id_, other->current_id_);
  swap(status_code_, other->status_code_);
  swap(is_batch_, other->is_batch_);
  swap(spend_us_, other->spend_us_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TraceStack::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Context::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Context::kLogIdFieldNumber;
const int Context::kServiceNameFieldNumber;
const int Context::kRpcNameFieldNumber;
const int Context::kStatusCodeFieldNumber;
const int Context::kCurrentStackIdFieldNumber;
const int Context::kParentStackIdFieldNumber;
const int Context::kStackAllocIdFieldNumber;
const int Context::kTraceStackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Context::Context()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_Context.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Base.Context)
}
Context::Context(const Context& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trace_stack_(from.trace_stack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_id().size() > 0) {
    log_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_id_);
  }
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  rpc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rpc_name().size() > 0) {
    rpc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_name_);
  }
  ::memcpy(&status_code_, &from.status_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&stack_alloc_id_) -
    reinterpret_cast<char*>(&status_code_)) + sizeof(stack_alloc_id_));
  // @@protoc_insertion_point(copy_constructor:MySvr.Base.Context)
}

void Context::SharedCtor() {
  log_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stack_alloc_id_) -
      reinterpret_cast<char*>(&status_code_)) + sizeof(stack_alloc_id_));
}

Context::~Context() {
  // @@protoc_insertion_point(destructor:MySvr.Base.Context)
  SharedDtor();
}

void Context::SharedDtor() {
  log_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Context::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Context::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Context& Context::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_Context.base);
  return *internal_default_instance();
}


void Context::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Base.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trace_stack_.Clear();
  log_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stack_alloc_id_) -
      reinterpret_cast<char*>(&status_code_)) + sizeof(stack_alloc_id_));
  _internal_metadata_.Clear();
}

bool Context::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Base.Context)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string log_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_id().data(), static_cast<int>(this->log_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Base.Context.log_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Base.Context.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rpc_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rpc_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rpc_name().data(), static_cast<int>(this->rpc_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.Base.Context.rpc_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_stack_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_stack_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parent_stack_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_stack_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stack_alloc_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stack_alloc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MySvr.Base.TraceStack trace_stack = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trace_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Base.Context)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Base.Context)
  return false;
#undef DO_
}

void Context::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Base.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_id = 1;
  if (this->log_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_id().data(), static_cast<int>(this->log_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.Context.log_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_id(), output);
  }

  // string service_name = 2;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.Context.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service_name(), output);
  }

  // string rpc_name = 3;
  if (this->rpc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc_name().data(), static_cast<int>(this->rpc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.Context.rpc_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rpc_name(), output);
  }

  // int32 status_code = 4;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status_code(), output);
  }

  // int32 current_stack_id = 5;
  if (this->current_stack_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->current_stack_id(), output);
  }

  // int32 parent_stack_id = 6;
  if (this->parent_stack_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->parent_stack_id(), output);
  }

  // int32 stack_alloc_id = 7;
  if (this->stack_alloc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stack_alloc_id(), output);
  }

  // repeated .MySvr.Base.TraceStack trace_stack = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trace_stack_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->trace_stack(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Base.Context)
}

::google::protobuf::uint8* Context::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Base.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_id = 1;
  if (this->log_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_id().data(), static_cast<int>(this->log_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.Context.log_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_id(), target);
  }

  // string service_name = 2;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.Context.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service_name(), target);
  }

  // string rpc_name = 3;
  if (this->rpc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc_name().data(), static_cast<int>(this->rpc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.Base.Context.rpc_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rpc_name(), target);
  }

  // int32 status_code = 4;
  if (this->status_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status_code(), target);
  }

  // int32 current_stack_id = 5;
  if (this->current_stack_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->current_stack_id(), target);
  }

  // int32 parent_stack_id = 6;
  if (this->parent_stack_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->parent_stack_id(), target);
  }

  // int32 stack_alloc_id = 7;
  if (this->stack_alloc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->stack_alloc_id(), target);
  }

  // repeated .MySvr.Base.TraceStack trace_stack = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trace_stack_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->trace_stack(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Base.Context)
  return target;
}

size_t Context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Base.Context)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MySvr.Base.TraceStack trace_stack = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->trace_stack_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trace_stack(static_cast<int>(i)));
    }
  }

  // string log_id = 1;
  if (this->log_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_id());
  }

  // string service_name = 2;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string rpc_name = 3;
  if (this->rpc_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rpc_name());
  }

  // int32 status_code = 4;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status_code());
  }

  // int32 current_stack_id = 5;
  if (this->current_stack_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_stack_id());
  }

  // int32 parent_stack_id = 6;
  if (this->parent_stack_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_stack_id());
  }

  // int32 stack_alloc_id = 7;
  if (this->stack_alloc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stack_alloc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Context::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Base.Context)
  GOOGLE_DCHECK_NE(&from, this);
  const Context* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Context>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Base.Context)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Base.Context)
    MergeFrom(*source);
  }
}

void Context::MergeFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Base.Context)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trace_stack_.MergeFrom(from.trace_stack_);
  if (from.log_id().size() > 0) {

    log_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_id_);
  }
  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.rpc_name().size() > 0) {

    rpc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_name_);
  }
  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
  if (from.current_stack_id() != 0) {
    set_current_stack_id(from.current_stack_id());
  }
  if (from.parent_stack_id() != 0) {
    set_parent_stack_id(from.parent_stack_id());
  }
  if (from.stack_alloc_id() != 0) {
    set_stack_alloc_id(from.stack_alloc_id());
  }
}

void Context::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Base.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Context::CopyFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Base.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Context::IsInitialized() const {
  return true;
}

void Context::Swap(Context* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Context::InternalSwap(Context* other) {
  using std::swap;
  CastToBase(&trace_stack_)->InternalSwap(CastToBase(&other->trace_stack_));
  log_id_.Swap(&other->log_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rpc_name_.Swap(&other->rpc_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_code_, other->status_code_);
  swap(current_stack_id_, other->current_stack_id_);
  swap(parent_stack_id_, other->parent_stack_id_);
  swap(stack_alloc_id_, other->stack_alloc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Context::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OneWayResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneWayResponse::OneWayResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_OneWayResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Base.OneWayResponse)
}
OneWayResponse::OneWayResponse(const OneWayResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MySvr.Base.OneWayResponse)
}

void OneWayResponse::SharedCtor() {
}

OneWayResponse::~OneWayResponse() {
  // @@protoc_insertion_point(destructor:MySvr.Base.OneWayResponse)
  SharedDtor();
}

void OneWayResponse::SharedDtor() {
}

void OneWayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OneWayResponse::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneWayResponse& OneWayResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_OneWayResponse.base);
  return *internal_default_instance();
}


void OneWayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Base.OneWayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OneWayResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Base.OneWayResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Base.OneWayResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Base.OneWayResponse)
  return false;
#undef DO_
}

void OneWayResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Base.OneWayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Base.OneWayResponse)
}

::google::protobuf::uint8* OneWayResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Base.OneWayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Base.OneWayResponse)
  return target;
}

size_t OneWayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Base.OneWayResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneWayResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Base.OneWayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OneWayResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneWayResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Base.OneWayResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Base.OneWayResponse)
    MergeFrom(*source);
  }
}

void OneWayResponse::MergeFrom(const OneWayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Base.OneWayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OneWayResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Base.OneWayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneWayResponse::CopyFrom(const OneWayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Base.OneWayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneWayResponse::IsInitialized() const {
  return true;
}

void OneWayResponse::Swap(OneWayResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneWayResponse::InternalSwap(OneWayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OneWayResponse::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FastRespResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FastRespResponse::FastRespResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_FastRespResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.Base.FastRespResponse)
}
FastRespResponse::FastRespResponse(const FastRespResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MySvr.Base.FastRespResponse)
}

void FastRespResponse::SharedCtor() {
}

FastRespResponse::~FastRespResponse() {
  // @@protoc_insertion_point(destructor:MySvr.Base.FastRespResponse)
  SharedDtor();
}

void FastRespResponse::SharedDtor() {
}

void FastRespResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FastRespResponse::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FastRespResponse& FastRespResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_FastRespResponse.base);
  return *internal_default_instance();
}


void FastRespResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.Base.FastRespResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool FastRespResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.Base.FastRespResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.Base.FastRespResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.Base.FastRespResponse)
  return false;
#undef DO_
}

void FastRespResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.Base.FastRespResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.Base.FastRespResponse)
}

::google::protobuf::uint8* FastRespResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.Base.FastRespResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.Base.FastRespResponse)
  return target;
}

size_t FastRespResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.Base.FastRespResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FastRespResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.Base.FastRespResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FastRespResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FastRespResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.Base.FastRespResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.Base.FastRespResponse)
    MergeFrom(*source);
  }
}

void FastRespResponse::MergeFrom(const FastRespResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.Base.FastRespResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FastRespResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.Base.FastRespResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FastRespResponse::CopyFrom(const FastRespResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.Base.FastRespResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastRespResponse::IsInitialized() const {
  return true;
}

void FastRespResponse::Swap(FastRespResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FastRespResponse::InternalSwap(FastRespResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FastRespResponse::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  Port(kPortFieldNumber, 0);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  MethodMode(kMethodModeFieldNumber, 0);

// @@protoc_insertion_point(namespace_scope)
}  // namespace Base
}  // namespace MySvr
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Base::TraceStack* Arena::CreateMaybeMessage< ::MySvr::Base::TraceStack >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Base::TraceStack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Base::Context* Arena::CreateMaybeMessage< ::MySvr::Base::Context >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Base::Context >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Base::OneWayResponse* Arena::CreateMaybeMessage< ::MySvr::Base::OneWayResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Base::OneWayResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::Base::FastRespResponse* Arena::CreateMaybeMessage< ::MySvr::Base::FastRespResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::Base::FastRespResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
