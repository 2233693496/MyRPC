// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: userstore.proto

#include "userstore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_userstore_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_userstore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_User;
}  // namespace protobuf_userstore_2eproto
namespace MySvr {
namespace UserStore {
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class CreateUserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateUserRequest>
      _instance;
} _CreateUserRequest_default_instance_;
class CreateUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateUserResponse>
      _instance;
} _CreateUserResponse_default_instance_;
class UpdateUserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserRequest>
      _instance;
} _UpdateUserRequest_default_instance_;
class UpdateUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserResponse>
      _instance;
} _UpdateUserResponse_default_instance_;
class ReadUserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadUserRequest>
      _instance;
} _ReadUserRequest_default_instance_;
class ReadUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadUserResponse>
      _instance;
} _ReadUserResponse_default_instance_;
class DeleteUserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteUserRequest>
      _instance;
} _DeleteUserRequest_default_instance_;
class DeleteUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteUserResponse>
      _instance;
} _DeleteUserResponse_default_instance_;
}  // namespace UserStore
}  // namespace MySvr
namespace protobuf_userstore_2eproto {
static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_User_default_instance_;
    new (ptr) ::MySvr::UserStore::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUser}, {}};

static void InitDefaultsCreateUserRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_CreateUserRequest_default_instance_;
    new (ptr) ::MySvr::UserStore::CreateUserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::CreateUserRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateUserRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateUserRequest}, {
      &protobuf_userstore_2eproto::scc_info_User.base,}};

static void InitDefaultsCreateUserResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_CreateUserResponse_default_instance_;
    new (ptr) ::MySvr::UserStore::CreateUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::CreateUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateUserResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateUserResponse}, {}};

static void InitDefaultsUpdateUserRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_UpdateUserRequest_default_instance_;
    new (ptr) ::MySvr::UserStore::UpdateUserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::UpdateUserRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateUserRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateUserRequest}, {
      &protobuf_userstore_2eproto::scc_info_User.base,}};

static void InitDefaultsUpdateUserResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_UpdateUserResponse_default_instance_;
    new (ptr) ::MySvr::UserStore::UpdateUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::UpdateUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateUserResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateUserResponse}, {}};

static void InitDefaultsReadUserRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_ReadUserRequest_default_instance_;
    new (ptr) ::MySvr::UserStore::ReadUserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::ReadUserRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadUserRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadUserRequest}, {}};

static void InitDefaultsReadUserResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_ReadUserResponse_default_instance_;
    new (ptr) ::MySvr::UserStore::ReadUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::ReadUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadUserResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadUserResponse}, {
      &protobuf_userstore_2eproto::scc_info_User.base,}};

static void InitDefaultsDeleteUserRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_DeleteUserRequest_default_instance_;
    new (ptr) ::MySvr::UserStore::DeleteUserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::DeleteUserRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteUserRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteUserRequest}, {}};

static void InitDefaultsDeleteUserResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MySvr::UserStore::_DeleteUserResponse_default_instance_;
    new (ptr) ::MySvr::UserStore::DeleteUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MySvr::UserStore::DeleteUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteUserResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteUserResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateUserRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateUserResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateUserRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateUserResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadUserRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadUserResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteUserRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteUserResponse.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::User, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::User, nick_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::User, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::CreateUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::CreateUserRequest, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::CreateUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::CreateUserResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::CreateUserResponse, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::UpdateUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::UpdateUserRequest, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::UpdateUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::UpdateUserResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::ReadUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::ReadUserRequest, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::ReadUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::ReadUserResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::ReadUserResponse, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::DeleteUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::DeleteUserRequest, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::DeleteUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MySvr::UserStore::DeleteUserResponse, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MySvr::UserStore::User)},
  { 8, -1, sizeof(::MySvr::UserStore::CreateUserRequest)},
  { 14, -1, sizeof(::MySvr::UserStore::CreateUserResponse)},
  { 21, -1, sizeof(::MySvr::UserStore::UpdateUserRequest)},
  { 27, -1, sizeof(::MySvr::UserStore::UpdateUserResponse)},
  { 33, -1, sizeof(::MySvr::UserStore::ReadUserRequest)},
  { 39, -1, sizeof(::MySvr::UserStore::ReadUserResponse)},
  { 46, -1, sizeof(::MySvr::UserStore::DeleteUserRequest)},
  { 52, -1, sizeof(::MySvr::UserStore::DeleteUserResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_CreateUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_CreateUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_UpdateUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_UpdateUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_ReadUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_ReadUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_DeleteUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MySvr::UserStore::_DeleteUserResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "userstore.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017userstore.proto\022\017MySvr.UserStore\032\nbase"
      ".proto\"<\n\004User\022\017\n\007user_id\030\001 \001(\t\022\021\n\tnick_"
      "name\030\002 \001(\t\022\020\n\010password\030\003 \001(\t\"8\n\021CreateUs"
      "erRequest\022#\n\004user\030\001 \001(\0132\025.MySvr.UserStor"
      "e.User\"6\n\022CreateUserResponse\022\017\n\007message\030"
      "\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\"8\n\021UpdateUserRequ"
      "est\022#\n\004user\030\001 \001(\0132\025.MySvr.UserStore.User"
      "\"%\n\022UpdateUserResponse\022\017\n\007message\030\001 \001(\t\""
      "\"\n\017ReadUserRequest\022\017\n\007user_id\030\001 \001(\t\"H\n\020R"
      "eadUserResponse\022\017\n\007message\030\001 \001(\t\022#\n\004user"
      "\030\002 \001(\0132\025.MySvr.UserStore.User\"$\n\021DeleteU"
      "serRequest\022\017\n\007user_id\030\001 \001(\t\"%\n\022DeleteUse"
      "rResponse\022\017\n\007message\030\001 \001(\t2\350\002\n\tUserStore"
      "\022U\n\nCreateUser\022\".MySvr.UserStore.CreateU"
      "serRequest\032#.MySvr.UserStore.CreateUserR"
      "esponse\022U\n\nUpdateUser\022\".MySvr.UserStore."
      "UpdateUserRequest\032#.MySvr.UserStore.Upda"
      "teUserResponse\022O\n\010ReadUser\022 .MySvr.UserS"
      "tore.ReadUserRequest\032!.MySvr.UserStore.R"
      "eadUserResponse\022U\n\nDeleteUser\022\".MySvr.Us"
      "erStore.DeleteUserRequest\032#.MySvr.UserSt"
      "ore.DeleteUserResponse\032\005\210\265\030\237\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 877);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "userstore.proto", &protobuf_RegisterTypes);
  ::protobuf_base_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_userstore_2eproto
namespace MySvr {
namespace UserStore {

// ===================================================================

void User::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kUserIdFieldNumber;
const int User::kNickNameFieldNumber;
const int User::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.User)
}

void User::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

User::~User() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.User)
  SharedDtor();
}

void User::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.User.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.User.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.User.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.User.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.User.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nick_name(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.User.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.User.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.User.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick_name(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.User.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string nick_name = 2;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_name_.Swap(&other->nick_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateUserRequest::InitAsDefaultInstance() {
  ::MySvr::UserStore::_CreateUserRequest_default_instance_._instance.get_mutable()->user_ = const_cast< ::MySvr::UserStore::User*>(
      ::MySvr::UserStore::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateUserRequest::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateUserRequest::CreateUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_CreateUserRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.CreateUserRequest)
}
CreateUserRequest::CreateUserRequest(const CreateUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::MySvr::UserStore::User(*from.user_);
  } else {
    user_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.CreateUserRequest)
}

void CreateUserRequest::SharedCtor() {
  user_ = NULL;
}

CreateUserRequest::~CreateUserRequest() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.CreateUserRequest)
  SharedDtor();
}

void CreateUserRequest::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void CreateUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateUserRequest::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateUserRequest& CreateUserRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_CreateUserRequest.base);
  return *internal_default_instance();
}


void CreateUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.CreateUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.CreateUserRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MySvr.UserStore.User user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.CreateUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.CreateUserRequest)
  return false;
#undef DO_
}

void CreateUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.CreateUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MySvr.UserStore.User user = 1;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.CreateUserRequest)
}

::google::protobuf::uint8* CreateUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.CreateUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MySvr.UserStore.User user = 1;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.CreateUserRequest)
  return target;
}

size_t CreateUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.CreateUserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .MySvr.UserStore.User user = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.CreateUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.CreateUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.CreateUserRequest)
    MergeFrom(*source);
  }
}

void CreateUserRequest::MergeFrom(const CreateUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.CreateUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::MySvr::UserStore::User::MergeFrom(from.user());
  }
}

void CreateUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.CreateUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateUserRequest::CopyFrom(const CreateUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.CreateUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUserRequest::IsInitialized() const {
  return true;
}

void CreateUserRequest::Swap(CreateUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateUserRequest::InternalSwap(CreateUserRequest* other) {
  using std::swap;
  swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateUserRequest::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateUserResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateUserResponse::kMessageFieldNumber;
const int CreateUserResponse::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateUserResponse::CreateUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_CreateUserResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.CreateUserResponse)
}
CreateUserResponse::CreateUserResponse(const CreateUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.CreateUserResponse)
}

void CreateUserResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateUserResponse::~CreateUserResponse() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.CreateUserResponse)
  SharedDtor();
}

void CreateUserResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateUserResponse::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateUserResponse& CreateUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_CreateUserResponse.base);
  return *internal_default_instance();
}


void CreateUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.CreateUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.CreateUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.CreateUserResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.CreateUserResponse.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.CreateUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.CreateUserResponse)
  return false;
#undef DO_
}

void CreateUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.CreateUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.CreateUserResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.CreateUserResponse.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.CreateUserResponse)
}

::google::protobuf::uint8* CreateUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.CreateUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.CreateUserResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.CreateUserResponse.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.CreateUserResponse)
  return target;
}

size_t CreateUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.CreateUserResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.CreateUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.CreateUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.CreateUserResponse)
    MergeFrom(*source);
  }
}

void CreateUserResponse::MergeFrom(const CreateUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.CreateUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void CreateUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.CreateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateUserResponse::CopyFrom(const CreateUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.CreateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUserResponse::IsInitialized() const {
  return true;
}

void CreateUserResponse::Swap(CreateUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateUserResponse::InternalSwap(CreateUserResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateUserResponse::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateUserRequest::InitAsDefaultInstance() {
  ::MySvr::UserStore::_UpdateUserRequest_default_instance_._instance.get_mutable()->user_ = const_cast< ::MySvr::UserStore::User*>(
      ::MySvr::UserStore::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserRequest::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserRequest::UpdateUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_UpdateUserRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.UpdateUserRequest)
}
UpdateUserRequest::UpdateUserRequest(const UpdateUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::MySvr::UserStore::User(*from.user_);
  } else {
    user_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.UpdateUserRequest)
}

void UpdateUserRequest::SharedCtor() {
  user_ = NULL;
}

UpdateUserRequest::~UpdateUserRequest() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.UpdateUserRequest)
  SharedDtor();
}

void UpdateUserRequest::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void UpdateUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateUserRequest::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserRequest& UpdateUserRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_UpdateUserRequest.base);
  return *internal_default_instance();
}


void UpdateUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.UpdateUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.UpdateUserRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MySvr.UserStore.User user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.UpdateUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.UpdateUserRequest)
  return false;
#undef DO_
}

void UpdateUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.UpdateUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MySvr.UserStore.User user = 1;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.UpdateUserRequest)
}

::google::protobuf::uint8* UpdateUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.UpdateUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MySvr.UserStore.User user = 1;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.UpdateUserRequest)
  return target;
}

size_t UpdateUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.UpdateUserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .MySvr.UserStore.User user = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.UpdateUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.UpdateUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.UpdateUserRequest)
    MergeFrom(*source);
  }
}

void UpdateUserRequest::MergeFrom(const UpdateUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.UpdateUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    mutable_user()->::MySvr::UserStore::User::MergeFrom(from.user());
  }
}

void UpdateUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.UpdateUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserRequest::CopyFrom(const UpdateUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.UpdateUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserRequest::IsInitialized() const {
  return true;
}

void UpdateUserRequest::Swap(UpdateUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserRequest::InternalSwap(UpdateUserRequest* other) {
  using std::swap;
  swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateUserRequest::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateUserResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserResponse::UpdateUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_UpdateUserResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.UpdateUserResponse)
}
UpdateUserResponse::UpdateUserResponse(const UpdateUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.UpdateUserResponse)
}

void UpdateUserResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateUserResponse::~UpdateUserResponse() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.UpdateUserResponse)
  SharedDtor();
}

void UpdateUserResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateUserResponse::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserResponse& UpdateUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_UpdateUserResponse.base);
  return *internal_default_instance();
}


void UpdateUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.UpdateUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UpdateUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.UpdateUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.UpdateUserResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.UpdateUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.UpdateUserResponse)
  return false;
#undef DO_
}

void UpdateUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.UpdateUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.UpdateUserResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.UpdateUserResponse)
}

::google::protobuf::uint8* UpdateUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.UpdateUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.UpdateUserResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.UpdateUserResponse)
  return target;
}

size_t UpdateUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.UpdateUserResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.UpdateUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.UpdateUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.UpdateUserResponse)
    MergeFrom(*source);
  }
}

void UpdateUserResponse::MergeFrom(const UpdateUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.UpdateUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void UpdateUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.UpdateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserResponse::CopyFrom(const UpdateUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.UpdateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserResponse::IsInitialized() const {
  return true;
}

void UpdateUserResponse::Swap(UpdateUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserResponse::InternalSwap(UpdateUserResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateUserResponse::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadUserRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadUserRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadUserRequest::ReadUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_ReadUserRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.ReadUserRequest)
}
ReadUserRequest::ReadUserRequest(const ReadUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.ReadUserRequest)
}

void ReadUserRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadUserRequest::~ReadUserRequest() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.ReadUserRequest)
  SharedDtor();
}

void ReadUserRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadUserRequest::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadUserRequest& ReadUserRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_ReadUserRequest.base);
  return *internal_default_instance();
}


void ReadUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.ReadUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReadUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.ReadUserRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.ReadUserRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.ReadUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.ReadUserRequest)
  return false;
#undef DO_
}

void ReadUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.ReadUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.ReadUserRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.ReadUserRequest)
}

::google::protobuf::uint8* ReadUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.ReadUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.ReadUserRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.ReadUserRequest)
  return target;
}

size_t ReadUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.ReadUserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.ReadUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.ReadUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.ReadUserRequest)
    MergeFrom(*source);
  }
}

void ReadUserRequest::MergeFrom(const ReadUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.ReadUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void ReadUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.ReadUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadUserRequest::CopyFrom(const ReadUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.ReadUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadUserRequest::IsInitialized() const {
  return true;
}

void ReadUserRequest::Swap(ReadUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadUserRequest::InternalSwap(ReadUserRequest* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadUserRequest::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadUserResponse::InitAsDefaultInstance() {
  ::MySvr::UserStore::_ReadUserResponse_default_instance_._instance.get_mutable()->user_ = const_cast< ::MySvr::UserStore::User*>(
      ::MySvr::UserStore::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadUserResponse::kMessageFieldNumber;
const int ReadUserResponse::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadUserResponse::ReadUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_ReadUserResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.ReadUserResponse)
}
ReadUserResponse::ReadUserResponse(const ReadUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_user()) {
    user_ = new ::MySvr::UserStore::User(*from.user_);
  } else {
    user_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.ReadUserResponse)
}

void ReadUserResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_ = NULL;
}

ReadUserResponse::~ReadUserResponse() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.ReadUserResponse)
  SharedDtor();
}

void ReadUserResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_;
}

void ReadUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadUserResponse::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadUserResponse& ReadUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_ReadUserResponse.base);
  return *internal_default_instance();
}


void ReadUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.ReadUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  _internal_metadata_.Clear();
}

bool ReadUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.ReadUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.ReadUserResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MySvr.UserStore.User user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.ReadUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.ReadUserResponse)
  return false;
#undef DO_
}

void ReadUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.ReadUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.ReadUserResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // .MySvr.UserStore.User user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.ReadUserResponse)
}

::google::protobuf::uint8* ReadUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.ReadUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.ReadUserResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // .MySvr.UserStore.User user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.ReadUserResponse)
  return target;
}

size_t ReadUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.ReadUserResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .MySvr.UserStore.User user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.ReadUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.ReadUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.ReadUserResponse)
    MergeFrom(*source);
  }
}

void ReadUserResponse::MergeFrom(const ReadUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.ReadUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_user()) {
    mutable_user()->::MySvr::UserStore::User::MergeFrom(from.user());
  }
}

void ReadUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.ReadUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadUserResponse::CopyFrom(const ReadUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.ReadUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadUserResponse::IsInitialized() const {
  return true;
}

void ReadUserResponse::Swap(ReadUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadUserResponse::InternalSwap(ReadUserResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadUserResponse::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteUserRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteUserRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteUserRequest::DeleteUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_DeleteUserRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.DeleteUserRequest)
}
DeleteUserRequest::DeleteUserRequest(const DeleteUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.DeleteUserRequest)
}

void DeleteUserRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteUserRequest::~DeleteUserRequest() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.DeleteUserRequest)
  SharedDtor();
}

void DeleteUserRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteUserRequest::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteUserRequest& DeleteUserRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_DeleteUserRequest.base);
  return *internal_default_instance();
}


void DeleteUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.DeleteUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.DeleteUserRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.DeleteUserRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.DeleteUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.DeleteUserRequest)
  return false;
#undef DO_
}

void DeleteUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.DeleteUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.DeleteUserRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.DeleteUserRequest)
}

::google::protobuf::uint8* DeleteUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.DeleteUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.DeleteUserRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.DeleteUserRequest)
  return target;
}

size_t DeleteUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.DeleteUserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.DeleteUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.DeleteUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.DeleteUserRequest)
    MergeFrom(*source);
  }
}

void DeleteUserRequest::MergeFrom(const DeleteUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.DeleteUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void DeleteUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.DeleteUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteUserRequest::CopyFrom(const DeleteUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.DeleteUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUserRequest::IsInitialized() const {
  return true;
}

void DeleteUserRequest::Swap(DeleteUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteUserRequest::InternalSwap(DeleteUserRequest* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteUserRequest::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteUserResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteUserResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteUserResponse::DeleteUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_userstore_2eproto::scc_info_DeleteUserResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MySvr.UserStore.DeleteUserResponse)
}
DeleteUserResponse::DeleteUserResponse(const DeleteUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:MySvr.UserStore.DeleteUserResponse)
}

void DeleteUserResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteUserResponse::~DeleteUserResponse() {
  // @@protoc_insertion_point(destructor:MySvr.UserStore.DeleteUserResponse)
  SharedDtor();
}

void DeleteUserResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteUserResponse::descriptor() {
  ::protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteUserResponse& DeleteUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_userstore_2eproto::scc_info_DeleteUserResponse.base);
  return *internal_default_instance();
}


void DeleteUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MySvr.UserStore.DeleteUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MySvr.UserStore.DeleteUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MySvr.UserStore.DeleteUserResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MySvr.UserStore.DeleteUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MySvr.UserStore.DeleteUserResponse)
  return false;
#undef DO_
}

void DeleteUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MySvr.UserStore.DeleteUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.DeleteUserResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MySvr.UserStore.DeleteUserResponse)
}

::google::protobuf::uint8* DeleteUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MySvr.UserStore.DeleteUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MySvr.UserStore.DeleteUserResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MySvr.UserStore.DeleteUserResponse)
  return target;
}

size_t DeleteUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MySvr.UserStore.DeleteUserResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MySvr.UserStore.DeleteUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MySvr.UserStore.DeleteUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MySvr.UserStore.DeleteUserResponse)
    MergeFrom(*source);
  }
}

void DeleteUserResponse::MergeFrom(const DeleteUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MySvr.UserStore.DeleteUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void DeleteUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MySvr.UserStore.DeleteUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteUserResponse::CopyFrom(const DeleteUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MySvr.UserStore.DeleteUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUserResponse::IsInitialized() const {
  return true;
}

void DeleteUserResponse::Swap(DeleteUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteUserResponse::InternalSwap(DeleteUserResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteUserResponse::GetMetadata() const {
  protobuf_userstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace UserStore
}  // namespace MySvr
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::User* Arena::CreateMaybeMessage< ::MySvr::UserStore::User >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::CreateUserRequest* Arena::CreateMaybeMessage< ::MySvr::UserStore::CreateUserRequest >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::CreateUserRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::CreateUserResponse* Arena::CreateMaybeMessage< ::MySvr::UserStore::CreateUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::CreateUserResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::UpdateUserRequest* Arena::CreateMaybeMessage< ::MySvr::UserStore::UpdateUserRequest >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::UpdateUserRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::UpdateUserResponse* Arena::CreateMaybeMessage< ::MySvr::UserStore::UpdateUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::UpdateUserResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::ReadUserRequest* Arena::CreateMaybeMessage< ::MySvr::UserStore::ReadUserRequest >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::ReadUserRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::ReadUserResponse* Arena::CreateMaybeMessage< ::MySvr::UserStore::ReadUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::ReadUserResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::DeleteUserRequest* Arena::CreateMaybeMessage< ::MySvr::UserStore::DeleteUserRequest >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::DeleteUserRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MySvr::UserStore::DeleteUserResponse* Arena::CreateMaybeMessage< ::MySvr::UserStore::DeleteUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MySvr::UserStore::DeleteUserResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
