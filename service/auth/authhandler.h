// Generated by the MyRPC compiler v1.0.0 . DO NOT EDIT! unless you know what you are doing

#pragma once

#include <set>
#include <string>

#include "../../common/log.hpp"
#include "../../common/utils.hpp"
#include "../../core/handler.hpp"
#include "../../core/mysvrclient.hpp"
#include "../../protocol/base.pb.h"
#include "proto/auth.pb.h"

using namespace MySvr::Base;
using namespace MySvr::Auth;

class AuthHandler : public Core::MyHandler {
 public:
  AuthHandler() {
    service_name_ = std::string{"Auth"};
    rpc_names_ = std::unordered_set<std::string>{"GenTicket", "VerifyTicket", "UpdateTicket"};
  }
  void MySvrHandler(Protocol::MySvrMessage &req, Protocol::MySvrMessage &resp) {
    RPC_HANDLER("GenTicket", GenTicket, GenTicketRequest, GenTicketResponse, req, resp);
    RPC_HANDLER("VerifyTicket", VerifyTicket, VerifyTicketRequest, VerifyTicketResponse, req, resp);
    RPC_HANDLER("UpdateTicket", UpdateTicket, UpdateTicketRequest, UpdateTicketResponse, req, resp);
  }
  int GenTicket(GenTicketRequest &request, GenTicketResponse &response);
  int VerifyTicket(VerifyTicketRequest &request, VerifyTicketResponse &response);
  int UpdateTicket(UpdateTicketRequest &request, UpdateTicketResponse &response);
};
